{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\e-com\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions'; // import {auth, createUserProfileDocument} from '../../firebase/firebase.utils'\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const signUpStart = this.props.signUpStart;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" Sign up with your email and password \"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" SIGN UP \")));\n  }\n\n}\n\nconst mapDipatchToProps = dispatch => ({\n  signUpStart: () => dispatch(signUpStart())\n});\n\nexport default connect(null, mapDipatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/alexa/Desktop/React Project/e-commerce/dev-projet-alex/e-com/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","Component","constructor","props","handleSubmit","e","preventDefault","state","password","confirmPassword","handleChange","target","name","value","setState","displayName","email","render","mapDipatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nimport {signUpStart} from '../../redux/user/user.actions'\r\n// import {auth, createUserProfileDocument} from '../../firebase/firebase.utils'\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles'\r\n\r\nclass SignUp extends React.Component{\r\n    constructor(props) {\r\n        super(props) \r\n\r\n        this.state = {\r\n            displayName: '',\r\n            email:'',\r\n            password:'',\r\n            confirmPassword:''\r\n        }\r\n    }\r\n\r\nhandleSubmit = async e => {\r\n    e.preventDefault()\r\n    const {signUpStart} = this.props\r\n    const {password, confirmPassword} = this.state    \r\n}\r\n\r\nhandleChange = e => {\r\n    const {name, value} = e.target\r\n\r\n    this.setState({[name]:value})\r\n}\r\n\r\n  render() {\r\n      const{signUpStart} = this.props\r\n        return (\r\n            <SignUpContainer>\r\n                <SignUpTitle> I do not have an account</SignUpTitle>\r\n                <span> Sign up with your email and password </span>\r\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n\r\n                    <FormInput\r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={this.handleChange}\r\n                        label='Display Name'\r\n                        required\r\n\r\n                    />\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={this.handleChange}\r\n                        label='Email'\r\n                        required\r\n\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={this.handleChange}\r\n                        label='Password'\r\n                        required\r\n\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={this.handleChange}\r\n                        label='Confirm Password'\r\n                        required\r\n\r\n                    />\r\n                    <CustomButton type='submit'> SIGN UP </CustomButton>\r\n                </form>\r\n            </SignUpContainer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDipatchToProps = dispatch => ({    \r\n    signUpStart: () => dispatch(signUpStart())\r\n})\r\n\r\nexport default connect(null, mapDipatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}