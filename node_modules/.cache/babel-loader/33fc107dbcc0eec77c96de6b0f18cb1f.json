{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\e-com\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\e-com\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\e-com\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredientials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setUserCredientials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"creer un compte\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" S'enregistrer avec un email and password \"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Votre nom\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirmer le Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" CREER UN COMPTE\")));\n};\n\nconst mapDipatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDipatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/alexa/Desktop/React Project/e-commerce/dev-projet-alex/e-com/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredientials","handleSubmit","e","preventDefault","alert","handleChange","target","name","value","mapDipatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nimport {signUpStart} from '../../redux/user/user.actions'\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles'\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n    const [userCredentials, setUserCredientials] = useState({displayName: '',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:''})\r\n    \r\n    const {displayName, email, password, confirmPassword} = userCredentials\r\n\r\n const handleSubmit = async e => {\r\n    e.preventDefault()\r\n    \r\n\r\n      if (password !== confirmPassword) {\r\n        alert(\"Password don't match\")\r\n        return;\r\n    }\r\n    signUpStart({displayName,email,password})\r\n}\r\n\r\nconst handleChange = e => {\r\n    const {name, value} = e.target\r\n\r\n    setUserCredientials({...userCredentials,[name]:value})\r\n}\r\n\r\n        return (\r\n            <SignUpContainer>\r\n                <SignUpTitle>creer un compte</SignUpTitle>\r\n                <span> S'enregistrer avec un email and password </span>\r\n                <form className='sign-up-form' onSubmit={handleSubmit}>\r\n\r\n                    <FormInput\r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={handleChange}\r\n                        label='Votre nom'\r\n                        required\r\n\r\n                    />\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        label='Email'\r\n                        required\r\n\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        label='Password'\r\n                        required\r\n\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={handleChange}\r\n                        label='Confirmer le Password'\r\n                        required\r\n\r\n                    />\r\n                    <CustomButton type='submit'> CREER UN COMPTE</CustomButton>\r\n                </form>\r\n            </SignUpContainer>\r\n        )\r\n}\r\nconst mapDipatchToProps = dispatch => ({    \r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\n\r\nexport default connect(null, mapDipatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}