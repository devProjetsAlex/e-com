{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDiapatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDiapatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/alexa/Desktop/React Project/e-commerce/dev-projet-alex/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDiapatchToProps","dispatch"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAiC,+BAAjC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,MAAMC,8BAA8B,GAAEL,WAAW,CAACC,mBAAD,CAAjD;AACA,MAAMK,yBAAyB,GAAGN,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC/B;AACJC,MAAAA,OAAO,EAAC;AADJ,KAD+B;AAAA,SAIrCC,uBAJqC,GAIX,IAJW;AAAA;;AAMrCC,EAAAA,iBAAiB,GAAG;AAAA,UACXb,iBADW,GACU,KAAKc,KADf,CACXd,iBADW;AAElB,UAAMe,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxE,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAlB,MAAAA,iBAAiB,CAACmB,cAAD,CAAjB;AACD,KAH8B,CAA/B;AAID;;AAEHC,EAAAA,MAAM,GAAE;AAAA,UACCC,KADD,GACU,KAAKP,KADf,CACCO,KADD;AAAA,UAECV,OAFD,GAEY,KAAKD,KAFjB,CAECC,OAFD;AAGN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGR,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGR,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAkDG,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAMD;;AAzBsC;;AA4BvC,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA,iBAAiB,EAAEmB,cAAc,IAAIK,QAAQ,CAACxB,iBAAiB,CAACmB,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["  \r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport { updateCollections} from '../../redux/shop/shop.actions'\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\r\n\r\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component'\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\r\n\r\nconst CollectionsOverviewWithSpinner= WithSpinner(CollectionsOverview)\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\nclass ShopPage extends React.Component {\r\n  state={\r\n    loading:true\r\n  }\r\n  unsubscribeFromSnapshot = null\r\n\r\n  componentDidMount() {\r\n    const {updateCollections} = this.props\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\r\n      updateCollections(collectionsMap)\r\n    })\r\n  }\r\n\r\nrender(){\r\n  const {match} = this.props \r\n  const {loading} = this.state\r\n  return (\r\n    <div className='shop-page'>\r\n    <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading}{...props}/>} />\r\n    <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={loading}{...props} />} />\r\n  </div>\r\n  )\r\n}\r\n}\r\n\r\nconst mapDiapatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDiapatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}