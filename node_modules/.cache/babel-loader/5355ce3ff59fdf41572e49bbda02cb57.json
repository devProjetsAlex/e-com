{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport { fectchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fectchCollectionsStartAsync = this.props.fectchCollectionsStartAsync;\n    fectchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !!isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionLoaded\n});\n\nconst mapDiapatchToProps = dispatch => ({\n  fectchCollectionsStartAsync: () => dispatch(fectchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDiapatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/alexa/Desktop/React Project/e-commerce/dev-projet-alex/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","selectIsCollectionLoaded","fectchCollectionsStartAsync","WithSpinner","CollectionsOverviewContainer","CollectionPage","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","mapDiapatchToProps","dispatch"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,SAAQC,wBAAR,QAAuC,iCAAvC;AACA,SAASC,2BAAT,QAA2C,+BAA3C;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAGA,MAAMC,yBAAyB,GAAGH,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAME,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACXP,2BADW,GACoB,KAAKQ,KADzB,CACXR,2BADW;AAElBA,IAAAA,2BAA2B;AAC5B;;AAEHS,EAAAA,MAAM,GAAE;AAAA,wBAC+B,KAAKD,KADpC;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,mBADR,eACQA,mBADR;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEV,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGJ,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAAC,CAACG;AAAxC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAMD;;AAdsC;;AAkBvC,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAC9Ca,EAAAA,mBAAmB,EAAEZ;AADyB,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,2BAA2B,EAAE,MAAMe,QAAQ,CAACf,2BAA2B,EAA5B;AADL,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["  \r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {createStructuredSelector} from 'reselect'\r\n\r\nimport {selectIsCollectionLoaded} from '../../redux/shop/shop.selectors'\r\nimport { fectchCollectionsStartAsync} from '../../redux/shop/shop.actions'\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\r\n\r\nimport CollectionsOverviewContainer from '../../components/collection-overview/collection-overview.container'\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\n\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    const {fectchCollectionsStartAsync} = this.props\r\n    fectchCollectionsStartAsync()\r\n  }\r\n  \r\nrender(){\r\n  const {match, isCollectionsLoaded} = this.props \r\n  return (\r\n    <div className='shop-page'>\r\n    <Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\r\n    <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!!isCollectionsLoaded}{...props} />} />\r\n  </div>\r\n  )\r\n}\r\n}\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n   isCollectionsLoaded: selectIsCollectionLoaded\r\n})\r\n\r\nconst mapDiapatchToProps = dispatch => ({\r\n  fectchCollectionsStartAsync: () => dispatch(fectchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDiapatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}