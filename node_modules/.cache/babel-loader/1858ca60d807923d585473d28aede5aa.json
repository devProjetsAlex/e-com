{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\e-com\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, getCurrentUser, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signOutSuccess, signOutFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUpStart({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  const confirmPassword = password;\n\n  if (password !== confirmPassword) {\n    alert(\"Password don't match\");\n    return;\n  }\n\n  try {\n    const _ref = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref.user;\n\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    this.setState({\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const userRef = yield call(createUserProfileDocument, userCredentials);\n    const userSnapshot = yield userRef.get();\n    yield put(signUpSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* singInWithGoogle() {\n  try {\n    const _ref2 = yield auth.signInWithPopup(googleProvider),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, singInWithGoogle);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpStart);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/alexa/Desktop/React Project/e-commerce/dev-projet-alex/e-com/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signUpSuccess","signUpFailure","auth","googleProvider","getCurrentUser","createUserProfileDocument","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signUpStart","payload","email","password","displayName","confirmPassword","alert","createUserWithEmailAndPassword","user","setState","userCredentials","singInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onSignUpStart","SIGN_UP_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\r\n\r\nimport UserActionTypes from './user.types'\r\n\r\nimport {signInSuccess, signInFailure, signUpSuccess, signUpFailure} from './user.actions'\r\nimport {auth, googleProvider,getCurrentUser, createUserProfileDocument} from '../../firebase/firebase.utils'\r\nimport {signOutSuccess, signOutFailure} from './user.actions'\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth)\r\n        const userSnapshot=yield userRef.get()\r\n        yield put(\r\n            signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\r\n    }catch (error){\r\n        yield put(signInFailure(error))\r\n    }\r\n    }\r\n\r\nexport function*signUpStart({payload: {email,password,displayName}}){\r\n    const confirmPassword = password\r\n   if (password !== confirmPassword) {\r\n        alert(\"Password don't match\")\r\n        return\r\n    }\r\n        try{\r\n            const {user} = yield auth.createUserWithEmailAndPassword(\r\n                email,\r\n                password\r\n            )\r\n          yield createUserProfileDocument(user, {displayName})\r\n           this.setState({\r\n            displayName: '',\r\n            email:'',\r\n            password:'',\r\n            confirmPassword:''\r\n           })\r\n        const userRef = yield call(createUserProfileDocument, userCredentials)\r\n        const userSnapshot=yield userRef.get()\r\n        yield put(\r\n            signUpSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\r\n           \r\n        } catch (error){\r\n            yield put(signUpFailure(error))\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport function* singInWithGoogle() {\r\ntry {\r\n    const {user}=yield auth.signInWithPopup(googleProvider)\r\n   yield getSnapshotFromUserAuth(user)\r\n}catch (error){\r\n    yield put(signInFailure(error))\r\n}\r\n}\r\nexport function*signInWithEmail({payload: {email,password}}){\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error)Â {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function*isUserAuthenticated() {\r\n    try{\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n         } catch(error) { \r\n             yield put(signInFailure(error))\r\n         }\r\n}\r\n\r\nexport function*signOut(){\r\n    try{\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n        } catch(error) {\r\n            yield put(signOutFailure(error))\r\n        }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, singInWithGoogle);\r\n  }\r\nexport function*onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUpStart)\r\n}\r\n\r\nexport function*onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\n\r\nexport function*onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function*onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut)\r\n}\r\n\r\nexport function*userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart), \r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ])\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}