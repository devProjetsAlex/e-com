{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\e-com\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, getCurrentUser, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signOutSuccess, signOutFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* singInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, singInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/alexa/Desktop/React Project/e-commerce/dev-projet-alex/e-com/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","getCurrentUser","createUserProfileDocument","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","singInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\r\n\r\nimport UserActionTypes from './user.types'\r\n\r\nimport {signInSuccess, signInFailure} from './user.actions'\r\nimport {auth, googleProvider,getCurrentUser, createUserProfileDocument} from '../../firebase/firebase.utils'\r\nimport {signOutSuccess, signOutFailure} from './user.actions'\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth)\r\n        const userSnapshot=yield userRef.get()\r\n        yield put(\r\n            signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\r\n    }catch (error){\r\n        yield put(signInFailure(error))\r\n    }\r\n    }\r\n\r\n\r\n\r\nexport function* singInWithGoogle() {\r\ntry {\r\n    const {user}=yield auth.signInWithPopup(googleProvider)\r\n   yield getSnapshotFromUserAuth(user)\r\n}catch (error){\r\n    yield put(signInFailure(error))\r\n}\r\n}\r\nexport function*signInWithEmail({payload: {email,password}}){\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error)Â {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function*isUserAuthenticated() {\r\n    try{\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n         } catch(error) { \r\n             yield put(signInFailure(error))\r\n         }\r\n}\r\n\r\nexport function*signOut(){\r\n    try{\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n        } catch(error) {\r\n            yield put(signOutFailure(error))\r\n        }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, singInWithGoogle);\r\n  }\r\n\r\nexport function*onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\n\r\nexport function*onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function*onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut)\r\n}\r\n\r\nexport function*userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart), \r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart)\r\n    ])\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}