{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\e-com\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const signUpStart = this.pros.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Password don't match\");\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" Sign up with your email and password \"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" SIGN UP \")));\n  }\n\n}\n\nconst mapDipatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDipatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/alexa/Desktop/React Project/e-commerce/dev-projet-alex/e-com/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","Component","constructor","handleSubmit","e","preventDefault","pros","state","displayName","email","password","confirmPassword","alert","handleChange","target","name","value","setState","render","mapDipatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nimport {signUpStart} from '../../redux/user/user.actions'\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles'\r\n\r\nclass SignUp extends React.Component{\r\n    constructor() {\r\n        super() \r\n\r\n        this.state = {\r\n            displayName: '',\r\n            email:'',\r\n            password:'',\r\n            confirmPassword:''\r\n        }\r\n    }\r\n\r\nhandleSubmit = async e => {\r\n    e.preventDefault()\r\n    const{signUpStart} =this.pros\r\n    const {displayName, email, password, confirmPassword} = this.state\r\n\r\n      if (password !== confirmPassword) {\r\n        alert(\"Password don't match\")\r\n        return;\r\n    }\r\n    signUpStart({displayName,email,password})\r\n}\r\n\r\nhandleChange = e => {\r\n    const {name, value} = e.target\r\n\r\n    this.setState({[name]:value})\r\n}\r\n\r\n    render() {\r\n        const {displayName, email, password, confirmPassword} = this.state\r\n        return (\r\n            <SignUpContainer>\r\n                <SignUpTitle> I do not have an account</SignUpTitle>\r\n                <span> Sign up with your email and password </span>\r\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n\r\n                    <FormInput\r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={this.handleChange}\r\n                        label='Display Name'\r\n                        required\r\n\r\n                    />\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={this.handleChange}\r\n                        label='Email'\r\n                        required\r\n\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={this.handleChange}\r\n                        label='Password'\r\n                        required\r\n\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={this.handleChange}\r\n                        label='Confirm Password'\r\n                        required\r\n\r\n                    />\r\n                    <CustomButton type='submit'> SIGN UP </CustomButton>\r\n                </form>\r\n            </SignUpContainer>\r\n        )\r\n    }\r\n}\r\nconst mapDipatchToProps = dispatch => ({    \r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\n\r\nexport default connect(null, mapDipatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}