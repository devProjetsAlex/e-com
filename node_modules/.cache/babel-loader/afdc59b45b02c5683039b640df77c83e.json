{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\React Project\\\\e-commerce\\\\dev-projet-alex\\\\e-com\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { auth } from '../../firebase/firebase.utils';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { googleSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            value = _e$target.value,\n            name = _e$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(SignInTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(ButtonsBarContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" Sign In \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"  Google\"))));\n  }\n\n}\n\nconst mapDipatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDipatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/alexa/Desktop/React Project/e-commerce/dev-projet-alex/e-com/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","CustomButton","FormInput","auth","SignInContainer","SignInTitle","ButtonsBarContainer","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","state","email","password","signInWithEmailAndPassword","setState","error","console","log","handleChange","target","value","name","render","mapDipatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport {auth} from '../../firebase/firebase.utils'\r\nimport {SignInContainer, SignInTitle, ButtonsBarContainer} from './sign-in.styles'\r\nimport {googleSignInStart} from '../../redux/user/user.actions'\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n        email:'',\r\n        password:''\r\n    }\r\n}\r\n\r\n\r\nhandleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const {email, password} = this.state\r\n\r\n    try {\r\n        await auth.signInWithEmailAndPassword(email, password)\r\n        this.setState({email:'', password: ''})\r\n    } catch (error) {\r\n        console.log(error)\r\n         }\r\n    }\r\n\r\nhandleChange = e => {\r\n    const {value, name} = e.target\r\n\r\n    this.setState({[name]:value })\r\n}\r\n\r\nrender() {\r\n    const {googleSignInStart} = this.props\r\nreturn (\r\n <SignInContainer>\r\n     <SignInTitle> I already have an account</SignInTitle>\r\n     <span> Sign in with your email and password</span>\r\n                \r\n     <form onSubmit={this.handleSubmit}>\r\n\r\n                <FormInput \r\n                name=\"email\" \r\n                type=\"email\" \r\n                handleChange={this.handleChange} \r\n                value={this.state.email} \r\n                label=\"Email\" required />\r\n              \r\n\r\n                <FormInput \r\n                name=\"password\" \r\n                type=\"password\" \r\n                value={this.state.password}\r\n                handleChange={this.handleChange} \r\n                label=\"Password\" \r\n                required />\r\n               \r\n       <ButtonsBarContainer>\r\n                <CustomButton type=\"submit\" > Sign In </CustomButton>\r\n                <CustomButton \r\n                type='button'\r\n                onClick={googleSignInStart} \r\n                isGoogleSignIn>  Google</CustomButton>\r\n       </ButtonsBarContainer>\r\n \r\n    </form>\r\n </SignInContainer>\r\n   )\r\n}\r\n}\r\n\r\nconst mapDipatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart())\r\n})\r\nexport default connect(null, mapDipatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}